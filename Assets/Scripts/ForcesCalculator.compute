// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel ForcesCalculator

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

// internal struct ForcesCalculatorInput
// {
//     public int Index1;
//     public Vector3 Position1;
//     public float Mass1;
//
//     public int Index2;
//     public Vector3 Position2;
//     public float Mass2;
// }
//
// internal struct ForcesCalculatorOutput
// {
//     public int Index1;
//     public Vector3 Force1;
//
//     public int Index2;
//     public Vector3 Force2;
// }

uint index1;
RWStructuredBuffer<float3> position1;
RWStructuredBuffer<float1> mass1;

[numthreads(1,1,1)]
void ForcesCalculator (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!

    Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
}
